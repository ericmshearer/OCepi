[{"path":"https://ericmshearer.github.io/OCepi/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Eric Shearer Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ericmshearer.github.io/OCepi/articles/calculations.html","id":"add_percent","dir":"Articles","previous_headings":"","what":"add_percent()","title":"Calculations","text":"One used calculations proportion. want multiply proportion 100, add argument multiply = FALSE. preparing data {ggplot2}, may want create labels n percent. Use argument n_suppress suppress low values reverse set order n % (default n %).","code":"linelist |>   mutate(race_ethnicity = recode_race(Ethnicity, Race, abbr_names = TRUE)) |>   count(race_ethnicity) |>   mutate(percent = add_percent(n, digits = 1)) #> # A tibble: 9 × 3 #>   race_ethnicity             n percent #>   <chr>                  <int>   <dbl> #> 1 AI/AN                     10     9.5 #> 2 Asian                      7     6.7 #> 3 Black/African American    16    15.2 #> 4 Hispanic/Latinx           19    18.1 #> 5 Multiple Races             6     5.7 #> 6 NHOPI                     10     9.5 #> 7 Other                     15    14.3 #> 8 Unknown                    8     7.6 #> 9 White                     14    13.3 linelist |>   mutate(race_ethnicity = recode_race(Ethnicity, Race, abbr_names = TRUE)) |>   count(race_ethnicity) |>   mutate(     percent = add_percent(n, digits = 1),     label = n_percent(n, percent, reverse = TRUE, n_suppress = 10)     ) #> # A tibble: 9 × 4 #>   race_ethnicity             n percent label      #>   <chr>                  <int>   <dbl> <chr>      #> 1 AI/AN                     10     9.5 9.5% (10)  #> 2 Asian                      7     6.7 **         #> 3 Black/African American    16    15.2 15.2% (16) #> 4 Hispanic/Latinx           19    18.1 18.1% (19) #> 5 Multiple Races             6     5.7 **         #> 6 NHOPI                     10     9.5 9.5% (10)  #> 7 Other                     15    14.3 14.3% (15) #> 8 Unknown                    8     7.6 **         #> 9 White                     14    13.3 13.3% (14)"},{"path":"https://ericmshearer.github.io/OCepi/articles/calculations.html","id":"rate_per_100k","dir":"Articles","previous_headings":"","what":"rate_per_100k()","title":"Calculations","text":"Another common calculation team incidence rate per 100,000.","code":"linelist |>   mutate(race_ethnicity = recode_race(Ethnicity, Race, abbr_names = TRUE)) |>   filter(race_ethnicity %in% c(\"White\",\"NHOPI\",\"Multiple Races\")) |>   count(race_ethnicity) |>   mutate(incidence_rate = case_when(     race_ethnicity == \"White\" ~ rate_per_100k(n, 1500000, digits = 1),     race_ethnicity == \"NHOPI\" ~ rate_per_100k(n, 100000, digits = 1),     race_ethnicity == \"Multiple Races\" ~ rate_per_100k(n, 200000, digits = 1)     )   ) #> # A tibble: 3 × 3 #>   race_ethnicity     n incidence_rate #>   <chr>          <int>          <dbl> #> 1 Multiple Races     6            3   #> 2 NHOPI             10           10   #> 3 White             14            0.9"},{"path":"https://ericmshearer.github.io/OCepi/articles/calculations.html","id":"time_between","dir":"Articles","previous_headings":"","what":"time_between()","title":"Calculations","text":"time_between() calculates time elapsed two dates following units: days, weeks, months years. Value always rounded account complete elapsed time. Note: order dates necessarily matter, beware sign.","code":"episode_date = as.Date(\"2020-04-01\") death_date = as.Date(\"2020-05-15\")  time_between(death_date, episode_date, unit = \"days\") #> [1] 44 time_between(episode_date, death_date, unit = \"days\") #> [1] -44  dob = as.Date(\"1986-04-01\") vaccine_date = as.Date(\"2023-05-15\")  time_between(vaccine_date, dob, unit = \"years\") #> [1] 37 time_between(dob, vaccine_date, unit = \"years\") #> [1] -37"},{"path":"https://ericmshearer.github.io/OCepi/articles/data-cleaning.html","id":"recode_race","dir":"Articles","previous_headings":"","what":"recode_race()","title":"Data Cleaning","text":"recode_race() can used several different ways: ethnicity race (CalREDIE), race (CAIR2), LOINC codes (Syndromic, thank Monterey suggestion), ‘Multi-race Status’ (VRBIS). recoding using ethnicity race, order recode_race(ethnicity, race). abbreviate long categories (.e. Native Hawaiian/Pacific Islander NHOPI), set abbr_names TRUE. use cases:","code":"linelist |>   mutate(     race_ethnicity = recode_race(Ethnicity, Race, abbr_names = FALSE)   ) |>   count(race_ethnicity) #> # A tibble: 9 × 2 #>   race_ethnicity                             n #>   <chr>                                  <int> #> 1 American Indian/Alaska Native             10 #> 2 Asian                                      7 #> 3 Black/African American                    16 #> 4 Hispanic/Latinx                           19 #> 5 Multiple Races                             6 #> 6 Native Hawaiian/Other Pacific Islander    10 #> 7 Other                                     15 #> 8 Unknown                                    8 #> 9 White                                     14 recode_race(\"2028-9\") #Syndromic/ESSENCE #> [1] \"Asian\"  recode_race(\"3\") #VRBIS #> [1] \"American Indian/Alaska Native\""},{"path":"https://ericmshearer.github.io/OCepi/articles/data-cleaning.html","id":"recode_gender","dir":"Articles","previous_headings":"","what":"recode_gender()","title":"Data Cleaning","text":"Can used CalREDIE, VRBIS, CAIR2 (really dataset abbreviates gender variable single letters).","code":"linelist |>   mutate(Gender = recode_gender(Gender)) |>   count(Gender) #> # A tibble: 3 × 2 #>   Gender              n #>   <chr>           <int> #> 1 Female             51 #> 2 Male               39 #> 3 Missing/Unknown    15"},{"path":"https://ericmshearer.github.io/OCepi/articles/data-cleaning.html","id":"recode_orientation","dir":"Articles","previous_headings":"","what":"recode_orientation()","title":"Data Cleaning","text":"Designed specifically use CalREDIE. Expects CTCIAdtlDemOrient variable.","code":"linelist |>   mutate(SexualOrientation = recode_orientation(SexualOrientation)) |>   count(SexualOrientation) #> # A tibble: 4 × 2 #>   SexualOrientation                       n #>   <chr>                               <int> #> 1 Bisexual                                1 #> 2 Gay, lesbian, or same gender-loving     3 #> 3 Heterosexual or straight               89 #> 4 Missing/Unknown                        12"},{"path":"https://ericmshearer.github.io/OCepi/articles/data-cleaning.html","id":"age_groups","dir":"Articles","previous_headings":"","what":"age_groups()","title":"Data Cleaning","text":"“copy paste code twice, create function”. age_groups(), longer copy + paste long dplyr::case_when() statements recode age age groups. default age groups set decade, following presets available use: cair2 peds: <12 M, 12-15 M, 16-23 M, 24 M, 25-47 M, 4-6 Years, 6+ Years covid: 0-17, 18-24, 25-34, 35-44, 45-54, 55-64, 65-74, 75-84, 85+ decade: 0-9, 10-19, 20-29, 30-39, 40-49, 50-59, 60-69, 70-79, 80+ enteric: 0-4, 5-14, 15-24, 25-44, 45-64, 65+ flu vax: 0-18, 19-49, 50-64, 65+ hcv: 0-17, 18-39, 40-59, 60+ infant: 0-2M, 3-4M, 5-6M, 7-8M, 9-10M, 11-12M mpox: 0-15, 16-24, 25-34, 35-44, 45-54, 55-64, 65+ pertussis: <1, 1-6, 7-10, 11-19, 20+ school: 0-4, 5-11, 12-17, 18-64, 65+ wnv: 0-17, 18-24, 25-34, 35-44, 45-54, 55-64, 65+ Please note: returned output set factor maintain proper ordering.","code":"linelist |>   mutate(age_group = age_groups(Age), type = \"decade\") |>   count(age_group) #> # A tibble: 9 × 2 #>   age_group     n #>   <fct>     <int> #> 1 0-9          12 #> 2 10-19        11 #> 3 20-29        11 #> 4 30-39        13 #> 5 40-49        12 #> 6 50-59        12 #> 7 60-69         6 #> 8 70-79        17 #> 9 80+          11"},{"path":"https://ericmshearer.github.io/OCepi/articles/data-cleaning.html","id":"clean_address","dir":"Articles","previous_headings":"","what":"clean_address()","title":"Data Cleaning","text":"best attempt standardize clean addresses clean_address(). function : convert characters title casing, recode abbreviated cardinal directions, recode abbreviated street endings (.e. Street, Circle, Plaza). Set keep_extra FALSE drop additional address data (.e. Apartment, Unit).","code":"cases <- data.frame(   Address = c(\"1234 Main Street Apt 204\",\"501 N Capital St\",\"233 W Green Plz Unit 3\") )  cases %>%   mutate(     Address_clean = clean_address(Address, keep_extra = TRUE)     ) #>                    Address                  Address_clean #> 1 1234 Main Street Apt 204 1234 Main Street Apartment 204 #> 2         501 N Capital St       501 North Capital Street #> 3   233 W Green Plz Unit 3    233 West Green Plaza Unit 3"},{"path":"https://ericmshearer.github.io/OCepi/articles/data-cleaning.html","id":"clean_phone","dir":"Articles","previous_headings":"","what":"clean_phone()","title":"Data Cleaning","text":"also attempt standardize phone number 10 digit U.S. format. removing country code symbols, length 10 characters, returned value NA.","code":"cases <- data.frame(   HomePhone = c(\"1-714-777-1234\",\"(949) 555-1234\",\"+442071539000\") )  cases %>%   mutate(HomePhone_clean = clean_phone(HomePhone)) #>        HomePhone HomePhone_clean #> 1 1-714-777-1234      7147771234 #> 2 (949) 555-1234      9495551234 #> 3  +442071539000            <NA>"},{"path":"https://ericmshearer.github.io/OCepi/articles/data-cleaning.html","id":"recode_ctract","dir":"Articles","previous_headings":"","what":"recode_ctract()","title":"Data Cleaning","text":"Census tract across datasets always - contain state county fips codes, . make match, use recode_ctract() remove state county fips code.","code":"recode_ctract(\"06059099244\") #> [1] \"099244\""},{"path":"https://ericmshearer.github.io/OCepi/articles/data-cleaning.html","id":"vrbis_manner_death","dir":"Articles","previous_headings":"","what":"vrbis_manner_death()","title":"Data Cleaning","text":"Expects “Manner Death” variable, follows CCDF data dictionary","code":"vrbis_manner_death(\"A\") #> [1] \"Accident\""},{"path":"https://ericmshearer.github.io/OCepi/articles/data-cleaning.html","id":"vrbis_place_death","dir":"Articles","previous_headings":"","what":"vrbis_place_death()","title":"Data Cleaning","text":"Expects “Place Death (Facility)”, follows CCDF data dictionary","code":"vrbis_place_death(6) #> [1] \"LTCF\""},{"path":"https://ericmshearer.github.io/OCepi/articles/data-cleaning.html","id":"vrbis_resident","dir":"Articles","previous_headings":"","what":"vrbis_resident()","title":"Data Cleaning","text":"use vrbis_resident(), need know county fips code CCDF county code (appendix G). Returned output 0/1 1 indicates death belongs county. columns, ’ll need (order): “Place Death (Facility)”, “County Death (Code)”, “Decedents County Residence (NCHS Code)”. Next, plug fips code fips CCDF county code county_code arguments.","code":"#Example 1 - OC SNF resident vrbis_resident(   \"6\",   \"30\",   \"059\",   fips = \"059\",   county_code = \"30\"   ) #> [1] 1  #Example 2 - OC Community Death vrbis_resident(   \"1\",   \"30\",   \"059\",   fips = \"059\",   county_code = \"30\"   ) #> [1] 1  #Example 3 - Non-OC resident dies in OC facility vrbis_resident(   \"1\",   \"29\",   \"058\",   fips = \"059\",   county_code = \"30\"   ) #> [1] 0"},{"path":"https://ericmshearer.github.io/OCepi/articles/data-cleaning.html","id":"suppress","dir":"Articles","previous_headings":"","what":"suppress()","title":"Data Cleaning","text":"Small cell sizes may need suppressed protect patient confidentiality prior reporting. example, cell sizes less_than 10 suppressed replace_with double asterisk.","code":"linelist %>%   mutate(age_group = age_groups(Age)) %>%   count(age_group) %>%   mutate(n_suppress = suppress(n, less_than = 10, replace_with = \"**\")) #> # A tibble: 9 × 3 #>   age_group     n n_suppress #>   <fct>     <int> <chr>      #> 1 0-9          12 12         #> 2 10-19        11 11         #> 3 20-29        11 11         #> 4 30-39        13 13         #> 5 40-49        12 12         #> 6 50-59        12 12         #> 7 60-69         6 **         #> 8 70-79        17 17         #> 9 80+          11 11"},{"path":"https://ericmshearer.github.io/OCepi/articles/data-cleaning.html","id":"hiv_redact","dir":"Articles","previous_headings":"","what":"hiv_redact()","title":"Data Cleaning","text":"Depending unit/program policy, mention HIV AIDS may need removed dataset. yet exhaustive, function accounts several variations HIV AIDS. found, warning message printed console.","code":"df <- data.frame(cause = c(\"cancer\",\"hepatitis\",\"COVID-19\",\"HIV\")) print(df) #>       cause #> 1    cancer #> 2 hepatitis #> 3  COVID-19 #> 4       HIV  df <- hiv_redact(df) #> Warning in hiv_redact(df): HIV/AIDS data detected. print(df) #>       cause #> 1    cancer #> 2 hepatitis #> 3  COVID-19 #> 4"},{"path":"https://ericmshearer.github.io/OCepi/articles/data-cleaning.html","id":"baby_name","dir":"Articles","previous_headings":"","what":"baby_name()","title":"Data Cleaning","text":"Removes variants baby/twin/newborn first name. Addresses data quality issue birth hepatitis B doses.","code":"baby_name(\"baby BOY\") #> [1] NA  baby_name(\"NEWBORN\") #> [1] NA  baby_name(\"twin A\") #> [1] NA"},{"path":"https://ericmshearer.github.io/OCepi/articles/date-conversions.html","id":"mmwr","dir":"Articles","previous_headings":"","what":"MMWR","title":"Date Conversions","text":"Core Functions: mmwr_year() - calculate epidemiological year mmwr_week() - calculate epidemiological week (disease week) week_ending_date() - calculate Saturday disease week mmwr_calendar() - returns data.frame columns disease week, week start end date, given epidemiological year mmwrweek_to_date() - calculate week ending date epidemiological year week Convert epidemiological year week week ending date: make mmwr_calendar() total disease weeks + start/end dates:","code":"dates <- linelist |>   select(SpecimenDate) |>   arrange(SpecimenDate) |>   mutate(     epi_year = mmwr_year(SpecimenDate),     disease_week = mmwr_week(SpecimenDate),     week_ending = week_ending_date(SpecimenDate)   )  head(dates) #> # A tibble: 6 × 4 #>   SpecimenDate epi_year disease_week week_ending #>   <date>          <dbl>        <dbl> <date>      #> 1 2022-06-04       2022           22 2022-06-04  #> 2 2022-06-04       2022           22 2022-06-04  #> 3 2022-06-04       2022           22 2022-06-04  #> 4 2022-06-05       2022           23 2022-06-11  #> 5 2022-06-05       2022           23 2022-06-11  #> 6 2022-06-06       2022           23 2022-06-11 dates <- dates |>   select(epi_year, disease_week) |>   mutate(     week_ending = mmwrweek_to_date(epi_year, disease_week)   )  head(dates) #> # A tibble: 6 × 3 #>   epi_year disease_week week_ending #>      <dbl>        <dbl> <date>      #> 1     2022           22 2022-06-04  #> 2     2022           22 2022-06-04  #> 3     2022           22 2022-06-04  #> 4     2022           23 2022-06-11  #> 5     2022           23 2022-06-11  #> 6     2022           23 2022-06-11 mmwr_calendar(2023) |>   head(20) #>    Year Week      Start        End #> 1  2023    1 2023-01-01 2023-01-07 #> 2  2023    2 2023-01-08 2023-01-14 #> 3  2023    3 2023-01-15 2023-01-21 #> 4  2023    4 2023-01-22 2023-01-28 #> 5  2023    5 2023-01-29 2023-02-04 #> 6  2023    6 2023-02-05 2023-02-11 #> 7  2023    7 2023-02-12 2023-02-18 #> 8  2023    8 2023-02-19 2023-02-25 #> 9  2023    9 2023-02-26 2023-03-04 #> 10 2023   10 2023-03-05 2023-03-11 #> 11 2023   11 2023-03-12 2023-03-18 #> 12 2023   12 2023-03-19 2023-03-25 #> 13 2023   13 2023-03-26 2023-04-01 #> 14 2023   14 2023-04-02 2023-04-08 #> 15 2023   15 2023-04-09 2023-04-15 #> 16 2023   16 2023-04-16 2023-04-22 #> 17 2023   17 2023-04-23 2023-04-29 #> 18 2023   18 2023-04-30 2023-05-06 #> 19 2023   19 2023-05-07 2023-05-13 #> 20 2023   20 2023-05-14 2023-05-20"},{"path":"https://ericmshearer.github.io/OCepi/articles/date-conversions.html","id":"assign_season","dir":"Articles","previous_headings":"","what":"assign_season()","title":"Date Conversions","text":"epidemiologists working viral respiratory surveillance, patients/laboratory results can also categorized season. Season context spans week 40 current year week 39 following year.","code":"df <- data.frame(spec_date = as.Date(c(\"2023-10-01\",\"2023-11-04\",\"2024-09-28\",\"2024-09-29\")))  df |>   mutate(season = assign_season(spec_date)) #>    spec_date  season #> 1 2023-10-01 2023-24 #> 2 2023-11-04 2023-24 #> 3 2024-09-28 2023-24 #> 4 2024-09-29 2024-25"},{"path":"https://ericmshearer.github.io/OCepi/articles/date-conversions.html","id":"to_month","dir":"Articles","previous_headings":"","what":"to_month()","title":"Date Conversions","text":"alternative grouping cases year week level month. Returned output date formatted YYYY-MM-01.","code":"df <- data.frame(spec_date = as.Date(c(\"2023-10-01\",\"2023-11-04\",\"2024-09-28\",\"2024-09-29\")))  df |>   mutate(month = to_month(spec_date)) #>    spec_date      month #> 1 2023-10-01 2023-10-01 #> 2 2023-11-04 2023-11-01 #> 3 2024-09-28 2024-09-01 #> 4 2024-09-29 2024-09-01"},{"path":"https://ericmshearer.github.io/OCepi/articles/extending-ggplot2.html","id":"theme_apollo-apollo_label","dir":"Articles","previous_headings":"","what":"theme_apollo() & apollo_label()","title":"Extending ggplot2","text":"Using West Nile Virus data, ’ll build plot using theme, labels, colors:  horizontal plots maps, update theme_apollo(direction = \"horizontal\") theme_apollo(direction = \"map\") respectively.","code":"wnv <- read.csv(\"https://data.chhs.ca.gov/dataset/3205b420-3f62-4a02-8d2e-9a9ed34c49f4/resource/6ef33c1b-9f54-49f2-a92e-51a1b78f0a06/download/vendor.csv\", na.strings = \"\", stringsAsFactors = FALSE) |>   group_by(County) |>   summarise(Total = sum(Reported.Positive.Cases)) |>   ungroup() |>   arrange(desc(Total)) |>   head(5)  ggplot(data = wnv, aes(x = reorder(County, -Total), y = Total)) +   geom_bar(stat = \"identity\", fill = cdcd_color(\"dodgers\")) +   theme_apollo() +   apollo_label(data = wnv, aes(label = format(Total, big.mark = \",\")), vjust = -0.3) +   scale_x_discrete(labels = scales::label_wrap(10)) +   scale_y_continuous(expand = c(0,0), limits = c(0,2000), labels = scales::label_number(big.mark = \",\")) +   labs(     title = \"West Nile Virus - Top 5 Jurisdictions\",     subtitle = \"PHS/Communicable Disease Control\",     x = \"Jurisdictions\",     y = \"Total Cases\",     caption = \"*Case counts are cumulative starting 2006.\"   )"},{"path":"https://ericmshearer.github.io/OCepi/articles/extending-ggplot2.html","id":"end_points","dir":"Articles","previous_headings":"","what":"end_points()","title":"Extending ggplot2","text":"line plots >1 group, recommended direct label groups. end_points() subset data last date time series, even groups end different dates (thank Butte County suggestion).","code":"covid <- read.csv(\"https://data.chhs.ca.gov/dataset/f333528b-4d38-4814-bebb-12db1f10f535/resource/046cdd2b-31e5-4d34-9ed3-b48cdbc4be7a/download/covid19cases_test.csv\", na.strings = \"\", stringsAsFactors = FALSE) |>   filter(area %in% c(\"Orange\",\"Los Angeles\",\"San Diego\"))  covid <- covid |>   group_by(area) |>   mutate(     date = as.Date(date, \"%Y-%m-%d\"),     rate = rate_per_100k(cases, population, digits = 1),     rate_ma_7 = round(zoo::rollmean(rate, k = 7, align = \"right\", na.pad = FALSE, fill = 0), digits = 2)   ) |>   ungroup() |>   filter(date <= \"2020-12-23\")  ggplot(data = covid, aes(x = date, y = rate_ma_7, color = area)) +   geom_line(linewidth = 1.2) +   theme_apollo(legend = \"Hide\") +   geom_text(data = end_points(covid, date = date), aes(label = area), hjust = -0.05, show.legend = FALSE, size = 4.5) +   scale_x_date(date_labels = \"%m/%Y\", date_breaks = \"2 months\", expand = expansion(add = c(0,35))) +   scale_y_continuous(expand = c(0,0), limits = c(0,155)) +   labs(     title = \"COVID-19 Incidence Rates by County, 2020\",     subtitle = \"PHS/Communicable Disease Control\",     x = \"Episode Date\",     y = \"Crude Rate per 100k\",     color = \"County\"   ) +   scale_color_manual(values = cdcd_color(\"dodgers\",\"mustard\",\"london pink\"))"},{"path":"https://ericmshearer.github.io/OCepi/articles/extending-ggplot2.html","id":"wrap_labels","dir":"Articles","previous_headings":"","what":"wrap_labels()","title":"Extending ggplot2","text":"categories long titles (e.g. race/ethnicity), may need wrap text better fit /next axis. Functions like scales::label_wrap() useful wrapping long labels via width argument. function always wrap label forward slash, labels contains “” (e.g. Black African American), “” replaced forward slash wrapped. Without wrapping:  wrapping:","code":"re <- data.frame(group = c(\"Native Hawaiian or Other Pacific Islander\",\"Black or African American\",\"American Indian or Alaska Native\"), score = c(89.5, 84, 73))  ggplot(data = re, aes(x = group, y = score, label = score)) +   geom_col() +   theme_apollo(direction = \"vertical\") +   scale_y_continuous(expand = c(0,0), limits = c(0,100)) +   labs(     title = \"Outcomes Across Select Race/Ethnicity\\n\",     x = \"Race/Ethnicity\",     y = \"Percentage (%)\"   ) +   apollo_label(vjust = -0.3) ggplot(data = re, aes(x = group, y = score, label = score)) +   geom_col() +   scale_x_discrete(labels = wrap_labels()) +   theme_apollo(direction = \"vertical\") +   scale_y_continuous(expand = c(0,0), limits = c(0,100)) +     labs(     title = \"Outcomes Across Select Race/Ethnicity\\n\",     x = \"Race/Ethnicity\",     y = \"Percentage (%)\"   ) +   apollo_label(vjust = -0.3)"},{"path":"https://ericmshearer.github.io/OCepi/articles/extending-ggplot2.html","id":"geom_dumbbell","dir":"Articles","previous_headings":"","what":"geom_dumbbell()","title":"Extending ggplot2","text":"Dumbbell plots consist two points connected solid line. Useful showing changes pre/post test scores timelines. Dataset requires two x variables (x xend) y variable (usually character/factor). customize points, use colour_x, colour_end, size. customize line, use colour linewidth.","code":"pre_post <- data.frame(Country = c(\"UK-A\",\"US-A\",\"UK-B\",\"US-B\"), PRE = c(0,1,2,3), POST = c(4,5,6,7))  ggplot(data = pre_post, aes(x = PRE, xend = POST, y = Country)) +   geom_dumbbell(colour_x = cdcd_color(\"mustard\"), colour_xend = cdcd_color(\"mustard\"), size = 5, linewidth = 2, colour = \"black\") +   labs(title = \"Dumbbell Plot\", x = \"Pre/Post Scores\", y = \"Country\") +   theme_apollo(direction = \"vertical\")"},{"path":"https://ericmshearer.github.io/OCepi/articles/extending-ggplot2.html","id":"geom_lollipop","dir":"Articles","previous_headings":"","what":"geom_lollipop()","title":"Extending ggplot2","text":"Lollipop plot similar dumbbell plot, one point. customize stem, use line.colour, linewidth, linetype (default stem color black.) customize point, use size color. plots, set yend = 0.  alternate use case geom_lollipop() labeling specific dates time series plot.","code":"ggplot(data = pre_post, aes(x = Country, y = POST, yend = 0)) +   geom_lollipop(color = cdcd_color(\"dodgers\"), line.colour = \"#000000\", size = 5, linewidth = 1) +   labs(title = \"Lollipop Plot\", x = \"Country\", y = \"Post Score\") +   theme_apollo(direction = \"vertical\") set.seed(1234) df <- data.frame(   type = \"a\",   date = seq.Date(from = as.Date(\"2023-01-01\"), to = as.Date(\"2023-12-01\"), by = \"month\"),   value = c(1,2,1,3,4,6,8,10,14,12,9,8),   stringsAsFactors = FALSE   )  peak_date = as.Date(\"2023-07-01\") peak_n = 8  ggplot(df, aes(x = date, y = value)) +   geom_line(linewidth = 1) +   annotate(\"text\", x = peak_date, y = peak_n * 0.6, label = \"Intervention Started\\nHere.\", size = 5) +   geom_lollipop(data = filter(df, date == peak_date), aes(x = date, y = value, yend = value * 0.7), color = cdcd_color(\"london pink\"), line.colour = \"#000000\", linetype = \"dotted\", size = 2.5) +     scale_x_date(expand = expansion(add = c(0,10)), breaks = \"month\", date_labels = \"%b-%y\") +   scale_y_continuous(expand = expansion(add = c(0,10))) +   theme_apollo(direction = \"vertical\") +   labs(     title = \"Labeling line plot with geom_lollipop\\n\",     x = \"Date\",     y = \"No. of Observations\"   )"},{"path":"https://ericmshearer.github.io/OCepi/articles/extending-ggplot2.html","id":"highlight_geom-desaturate_geom","dir":"Articles","previous_headings":"","what":"highlight_geom() & desaturate_geom()","title":"Extending ggplot2","text":"making data visualizations, emphasizing data points highlighting/fading may help viewer see take home message. {OCepi} providers two ways : highlight_geom() desaturate_geom(). highlight_geom() requires two basic arguments - 1) expression (similar ’d use dplyr::filter()), 2) color highlighting. Although sensible defaults built-, following additional arguments within highlight_geom() can customized: size (geom_point()) linewidth (geom_line(), geom_sf()) Please note: default fade color/fill highlight_geom() light grey (#cccccc). override, add fill/color geom_* (e.g. geom_line(color = \"black\"). desaturate_geom() requires two basic arguments highlight_geom() plus desaturate (range 0-1, 1 highest level desaturation). Instead fading non-emphasized categories gray, retain color desaturated. Options customize include: size (points) linewidth (geom_line(), geom_sf()) highlighting approaches work facet_wrap() facet_grid(). Currently works geom_col()/geom_bar(), geom_line(), geom_sf(), geom_point(). Please note: labels highlighted place text/label function highlight/desaturate function. don’t want labels highlighted, placed labels highlight/desaturate function.","code":""},{"path":"https://ericmshearer.github.io/OCepi/articles/extending-ggplot2.html","id":"bar---highlight","dir":"Articles","previous_headings":"highlight_geom() & desaturate_geom()","what":"Bar - Highlight","title":"Extending ggplot2","text":"","code":"vpd <- read.csv(\"https://data.chhs.ca.gov/dataset/bd6a1ca8-dd41-4cbf-84a2-0e899af64b67/resource/a7a4d868-f6d2-49c9-8a11-904c69a0e3a0/download/izb-cases-by-county-year-2022.csv\", na.strings = \"\", stringsAsFactors = FALSE) |>   filter(Disease == \"Pertussis\", County %in% c(\"Orange\",\"Riverside\"), Year >= 2009)  ggplot(data = vpd, aes(x = as.character(Year), y = Count)) +   geom_col() +   facet_wrap(~County, nrow = 2) +   apollo_label(data = vpd, aes(label = Count), vjust = -0.3) +   highlight_geom(Count > 200, pal = cdcd_color(\"london pink\")) +   scale_y_continuous(expand = c(0,0), limits = c(0,525)) +   theme_apollo() +   labs(     title = \"Pertussis Cases by Year, Orange & Riverside Counties\",     subtitle = \"PHS/Communicable Disease Control\",     x = \"Year\",     y = \"Total Cases\",     caption = \"*Years with >200 cases are highlighted.\"   )"},{"path":"https://ericmshearer.github.io/OCepi/articles/extending-ggplot2.html","id":"line---highlight","dir":"Articles","previous_headings":"highlight_geom() & desaturate_geom()","what":"Line - Highlight","title":"Extending ggplot2","text":"","code":"ggplot(data = covid, aes(x = date, y = rate_ma_7, group = area)) +   geom_line(linewidth = 1.2) +   apollo_label(data = end_points(covid, date), aes(label = area), hjust = -0.05, vjust = 0) +   highlight_geom(area == \"Orange\", pal = cdcd_color(\"london pink\"), linewidth = 1.5) +   scale_x_date(date_labels = \"%m/%Y\", date_breaks = \"2 months\", expand = expansion(add = c(0,35))) +   scale_y_continuous(expand = c(0,0), limits = c(0,155)) +   theme_apollo() +   labs(     title = \"desaturate_geom - line plot\",     subtitle = \"Main group is highlighted, all others desaturated\",     x = \"Episode Date\",     y = \"Crude Rate per 100k\"     )"},{"path":"https://ericmshearer.github.io/OCepi/articles/extending-ggplot2.html","id":"shapefilemap---desaturate","dir":"Articles","previous_headings":"highlight_geom() & desaturate_geom()","what":"Shapefile/Map - desaturate","title":"Extending ggplot2","text":"","code":"base_zip <- oc_zip_sf  ggplot(data = oc_zip_sf) +   geom_sf() +   desaturate_geom(Zip %in% c(92702:92708), pal = cdcd_color(\"dodgers\"), desaturate = 0.75, linewidth = 0.5) +   geom_sf_text(data = base_zip, aes(label = Zip)) +   theme_apollo(direction = \"map\") +   labs(     title = \"Orange County Zip Codes\",     subtitle = \"Highlight geographies of interest\"   )"},{"path":"https://ericmshearer.github.io/OCepi/articles/linking_data.html","id":"match_id_1","dir":"Articles","previous_headings":"","what":"match_id_1","title":"Linking Data","text":"match_id_1 uses first four characters first last name, full date birth, first 10 characters address. recommended tidy address using clean_address package prior using match_id_1.","code":"match_id_1(\"Mickey\",\"Mouse\",\"1955-07-17\",\"1313 Disneyland Dr\") #> [1] \"MICKMOUS1955-07-171313 Disne\""},{"path":"https://ericmshearer.github.io/OCepi/articles/linking_data.html","id":"match_id_2","dir":"Articles","previous_headings":"","what":"match_id_2","title":"Linking Data","text":"match_id_2 uses variables match_id_1 except uses full address.","code":"match_id_2(\"Mickey\",\"Mouse\",\"1955-07-17\",\"1313 Disneyland Dr\") #> [1] \"MICKMOUS1955-07-171313 Disneyland Dr\""},{"path":"https://ericmshearer.github.io/OCepi/articles/linking_data.html","id":"match_id_3","dir":"Articles","previous_headings":"","what":"match_id_3","title":"Linking Data","text":"match_id_3 uses first four characters first last name, full date birth, phone number. Phone number can quite messy - contain parentheses, dashes, /country codes. One option tidy phone number use clean_phone package. Please aware function looks valid, 10 digit U.S. based phone numbers. dealing mix international U.S. phone numbers, approaches may needed.","code":"match_id_3(\"Mickey\",\"Mouse\",\"1955-07-17\",\"714-781-4636\") #> [1] \"MICKMOUS1955-07-17714-781-4636\" match_id_3(\"Mickey\",\"Mouse\",\"1955-07-17\",clean_phone(\"714-781-4636\")) #> [1] \"MICKMOUS1955-07-177147814636\""},{"path":"https://ericmshearer.github.io/OCepi/articles/linking_data.html","id":"match_id_4","dir":"Articles","previous_headings":"","what":"match_id_4","title":"Linking Data","text":"match_id_4 sensitive approach making unique id’s. id uses first four characters first last name plus date birth. using id join data, recommended use identifiers validate matches (e.g. phone number, address).","code":"match_id_4(\"Mickey\",\"Mouse\",\"1955-07-17\") #> [1] \"MICKMOUS1955-07-17\""},{"path":"https://ericmshearer.github.io/OCepi/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eric Shearer. Author, maintainer, copyright holder.","code":""},{"path":"https://ericmshearer.github.io/OCepi/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Shearer E (2024). OCepi: Collection Common Data Cleaning Tools Epidemiologists. R package version 0.2.0, https://ericmshearer.github.io/OCepi/.","code":"@Manual{,   title = {OCepi: Collection of Common Data Cleaning Tools for Epidemiologists},   author = {Eric Shearer},   year = {2024},   note = {R package version 0.2.0},   url = {https://ericmshearer.github.io/OCepi/}, }"},{"path":"https://ericmshearer.github.io/OCepi/index.html","id":"ocepi-","dir":"","previous_headings":"","what":"Collection of Common Data Cleaning Tools for Epidemiologists","title":"Collection of Common Data Cleaning Tools for Epidemiologists","text":"{OCepi} aims provide standardized approach mundane data wrangling tasks public health epidemiologists. functions included package can broadly applied made specifically epidemiologists county State agencies. package addresses following priorities: standardization recoding demographic data, specifically: ethnicity/race, gender, sexual orientation, age groups ggplot2 extensions elevate data visualizations convert dates weeks, months, years following CDC MMWR schema","code":""},{"path":"https://ericmshearer.github.io/OCepi/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Collection of Common Data Cleaning Tools for Epidemiologists","text":"latest development version:","code":"# install.packages(\"devtools\") devtools::install_github(\"ericmshearer/OCepi\")"},{"path":"https://ericmshearer.github.io/OCepi/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Collection of Common Data Cleaning Tools for Epidemiologists","text":"Simplest ways contact : Questions/Feedback: ericshearer@.com Issues/Bugs: https://github.com/ericmshearer/OCepi/issues","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/add_percent.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Proportion — add_percent","title":"Add Proportion — add_percent","text":"Calculate percentage per category options round multiply 100.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/add_percent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Proportion — add_percent","text":"","code":"add_percent(n, digits = 2, multiply = TRUE)"},{"path":"https://ericmshearer.github.io/OCepi/reference/add_percent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Proportion — add_percent","text":"n Count/frequency variable. digits Number digits round. multiply Default set TRUE. keep fraction set FALSE.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/add_percent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Proportion — add_percent","text":"Proportion.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/add_percent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Proportion — add_percent","text":"","code":"df <- data.frame(species = c(\"Droid\",\"Human\",\"Wookie\"), n = c(3,12,1)) df$percent <- add_percent(df$n) df #>   species  n percent #> 1   Droid  3   18.75 #> 2   Human 12   75.00 #> 3  Wookie  1    6.25"},{"path":"https://ericmshearer.github.io/OCepi/reference/age_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Create age groups. — age_groups","title":"Create age groups. — age_groups","text":"Add age groups column using common age grouping presets. R Markdown documentation list presets.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/age_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create age groups. — age_groups","text":"","code":"age_groups(age_var, type = \"decade\")"},{"path":"https://ericmshearer.github.io/OCepi/reference/age_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create age groups. — age_groups","text":"age_var Age variable numeric format. type Specify preset use.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/age_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create age groups. — age_groups","text":"Age groups factor.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/age_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create age groups. — age_groups","text":"","code":"df <- data.frame(Age = sample(0:99, 100)) df$agegrps <- age_groups(df$Age, type = \"covid\") head(df) #>   Age agegrps #> 1  44   35-44 #> 2  22   18-24 #> 3  75   75-84 #> 4  62   55-64 #> 5  46   45-54 #> 6  30   25-34"},{"path":"https://ericmshearer.github.io/OCepi/reference/apollo_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Apollo Label — apollo_label","title":"Apollo Label — apollo_label","text":"Labels match style theme_apollo.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/apollo_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apollo Label — apollo_label","text":"","code":"apollo_label(..., size = 4.5, color = \"#231f20\")"},{"path":"https://ericmshearer.github.io/OCepi/reference/apollo_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apollo Label — apollo_label","text":"... arguments available geom_text. size Font size, preset 4.5 color Font color, preset #231f20","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/apollo_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apollo Label — apollo_label","text":"Standard label plots.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/apollo_label.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apollo Label — apollo_label","text":"Recommended settings: bar plot vjust = -0.3 horizontal bar plot hjust = -0.5.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/assign_season.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign Respiratory Season — assign_season","title":"Assign Respiratory Season — assign_season","text":"Calculate respiratory season based laboratory episode date. Respiratory season defined week 40 week 39.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/assign_season.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign Respiratory Season — assign_season","text":"","code":"assign_season(date)"},{"path":"https://ericmshearer.github.io/OCepi/reference/assign_season.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign Respiratory Season — assign_season","text":"date Input date.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/assign_season.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign Respiratory Season — assign_season","text":"Character format YYYY-YY.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/assign_season.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign Respiratory Season — assign_season","text":"","code":"x = as.Date(\"2023-10-01\") assign_season(x) #> [1] \"2023-24\""},{"path":"https://ericmshearer.github.io/OCepi/reference/baby_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Baby Name in CAIR2 — baby_name","title":"Remove Baby Name in CAIR2 — baby_name","text":"Clean birth hepatitis B doses CAIR2.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/baby_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Baby Name in CAIR2 — baby_name","text":"","code":"baby_name(name)"},{"path":"https://ericmshearer.github.io/OCepi/reference/baby_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Baby Name in CAIR2 — baby_name","text":"name First name field CAIR2.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/baby_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Baby Name in CAIR2 — baby_name","text":"Clean first name.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/baby_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Baby Name in CAIR2 — baby_name","text":"","code":"baby_name(\"BABYBOY\") #> [1] NA baby_name(\"Twin Girl\") #> [1] NA"},{"path":"https://ericmshearer.github.io/OCepi/reference/cdcd_color.html","id":null,"dir":"Reference","previous_headings":"","what":"Use Team Colors in Plots — cdcd_color","title":"Use Team Colors in Plots — cdcd_color","text":"Function call commonly used colors data visualizations.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/cdcd_color.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use Team Colors in Plots — cdcd_color","text":"","code":"cdcd_color(...)"},{"path":"https://ericmshearer.github.io/OCepi/reference/cdcd_color.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use Team Colors in Plots — cdcd_color","text":"... Vector color names. Run cdcd_color() view options.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/cdcd_color.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use Team Colors in Plots — cdcd_color","text":"Hex codes.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/cdcd_color.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use Team Colors in Plots — cdcd_color","text":"","code":"cdcd_color() #>       green   turquoise  light blue london pink      orange title color  #>   \"#5ea15d\"   \"#63c5b5\"   \"#6da7de\"   \"#9e0059\"   \"#F28C28\"   \"#231f20\"  #>  axis color  grid color        plum     mustard     dodgers  #>   \"#353d42\"   \"#E8EDEE\"   \"#b366a4\"   \"#da9400\"   \"#005A9C\"  cdcd_color(\"green\") #> [1] \"#5ea15d\""},{"path":"https://ericmshearer.github.io/OCepi/reference/clean_address.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean patient/record address — clean_address","title":"Clean patient/record address — clean_address","text":"Recode common address issues cardinal directions street names, removes extra location information unit apartment number.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/clean_address.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean patient/record address — clean_address","text":"","code":"clean_address(address_var, keep_extra = TRUE)"},{"path":"https://ericmshearer.github.io/OCepi/reference/clean_address.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean patient/record address — clean_address","text":"address_var Address variable. keep_extra Defaults TRUE. Option keep/remove extra address components (e.g. Apartment, Unit, Space).","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/clean_address.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean patient/record address — clean_address","text":"Address character.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/clean_address.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean patient/record address — clean_address","text":"","code":"x = \"1234 N Main St Apt 405\" clean_address(x, keep_extra = TRUE) #> [1] \"1234 North Main Street Apartment 405\" clean_address(x, keep_extra = FALSE) #> [1] \"1234 North Main Street\""},{"path":"https://ericmshearer.github.io/OCepi/reference/clean_phone.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean Phone Number — clean_phone","title":"Clean Phone Number — clean_phone","text":"Reformat phone number column 10 digit U.S. format. international invalid phone number (e.g. 10 digits), returns NA.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/clean_phone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean Phone Number — clean_phone","text":"","code":"clean_phone(phone_var)"},{"path":"https://ericmshearer.github.io/OCepi/reference/clean_phone.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean Phone Number — clean_phone","text":"phone_var Phone number variable.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/clean_phone.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean Phone Number — clean_phone","text":"Reformatted phone number.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/clean_phone.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean Phone Number — clean_phone","text":"","code":"clean_phone(\"1-714-834-8180\") #> [1] \"7148348180\""},{"path":"https://ericmshearer.github.io/OCepi/reference/desaturate_geom.html","id":null,"dir":"Reference","previous_headings":"","what":"Desaturate Geom Using Expression — desaturate_geom","title":"Desaturate Geom Using Expression — desaturate_geom","text":"Highlight bar, point, line plot based expression desaturating data points.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/desaturate_geom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Desaturate Geom Using Expression — desaturate_geom","text":"","code":"desaturate_geom(   expr,   pal = NULL,   size = 3.14,   desaturate = 0.75,   linewidth = 1.2 )"},{"path":"https://ericmshearer.github.io/OCepi/reference/desaturate_geom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Desaturate Geom Using Expression — desaturate_geom","text":"expr Expression pal Color highlighted data point size Point size using geom_point desaturate Level desaturation non-highlighted data points, ranges 0-1 1 equal highest level desaturation linewidth Linewidth using geom_line geom_sf","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/desaturate_geom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Desaturate Geom Using Expression — desaturate_geom","text":"Desaturated geon","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/desaturate_geom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Desaturate Geom Using Expression — desaturate_geom","text":"","code":"df <- data.frame(locations = letters[1:5], scores = c(80,84,91,89,80)) ggplot(data = df, aes(x = locations, y = scores)) + geom_col() + desaturate_geom(scores==max(scores), pal = \"#d55c19\", desaturate = 0.7)"},{"path":"https://ericmshearer.github.io/OCepi/reference/elr.html","id":null,"dir":"Reference","previous_headings":"","what":"ELR Terms - Positive — pos","title":"ELR Terms - Positive — pos","text":"vector SNOMED codes keywords used ELR recoding. vector SNOMED codes keywords used ELR recoding.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/elr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ELR Terms - Positive — pos","text":"","code":"pos(collapse = FALSE)  neg(collapse = FALSE)"},{"path":"https://ericmshearer.github.io/OCepi/reference/elr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ELR Terms - Positive — pos","text":"collapse Boolean collapse string separated \"|\".","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/elr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ELR Terms - Positive — pos","text":"Vector characters. Vector characters.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/elr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ELR Terms - Positive — pos","text":"","code":"pos(collapse = FALSE) #>  [1] \"POSITIVE\"         \"REACTIVE\"         \"DETECTED\"         \"10828004\"         #>  [5] \"260373001\"        \"840533007\"        \"PCRP11\"           \"PDETD\"            #>  [9] \"COVPRE\"           \"11214006\"         \"Positive for IgG\" \"POS\"              #> [13] \"DECTECTED\"        \"REA\"              \"PPOSI\"            \"REAC\"             pos() #>  [1] \"POSITIVE\"         \"REACTIVE\"         \"DETECTED\"         \"10828004\"         #>  [5] \"260373001\"        \"840533007\"        \"PCRP11\"           \"PDETD\"            #>  [9] \"COVPRE\"           \"11214006\"         \"Positive for IgG\" \"POS\"              #> [13] \"DECTECTED\"        \"REA\"              \"PPOSI\"            \"REAC\"             neg(collapse = FALSE) #>  [1] \"NEGATIVE\"       \"NON REACTIVE\"   \"NON-REACTIVE\"   \"NOT REACTIVE\"   #>  [5] \"NOT DETECTED\"   \"NEG\"            \"NDET\"           \"NOT DETECT\"     #>  [9] \"260385009\"      \"26041500\"       \"NOTDETECTED\"    \"131194007\"      #> [13] \"895231008\"      \"NONE DETECTED\"  \"NO DETECTED\"    \"NOT DETECTABLE\" #> [17] \"NOT DETECTE\"    \"NOT DETECTIVE\"  \"NOTDETECT\"      \"NOTDETECTED\"    #> [21] \"NR\"             \"NONREACTIVE\"    \"NOTREACTIVE\"    neg() #>  [1] \"NEGATIVE\"       \"NON REACTIVE\"   \"NON-REACTIVE\"   \"NOT REACTIVE\"   #>  [5] \"NOT DETECTED\"   \"NEG\"            \"NDET\"           \"NOT DETECT\"     #>  [9] \"260385009\"      \"26041500\"       \"NOTDETECTED\"    \"131194007\"      #> [13] \"895231008\"      \"NONE DETECTED\"  \"NO DETECTED\"    \"NOT DETECTABLE\" #> [17] \"NOT DETECTE\"    \"NOT DETECTIVE\"  \"NOTDETECT\"      \"NOTDETECTED\"    #> [21] \"NR\"             \"NONREACTIVE\"    \"NOTREACTIVE\""},{"path":"https://ericmshearer.github.io/OCepi/reference/end_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset Data To Label Line Plot — end_points","title":"Subset Data To Label Line Plot — end_points","text":"Subset dataframe label last point geom_line. Function takes account time series end time point.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/end_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset Data To Label Line Plot — end_points","text":"","code":"end_points(df, date = NULL, group_by = NULL)"},{"path":"https://ericmshearer.github.io/OCepi/reference/end_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset Data To Label Line Plot — end_points","text":"df Dataframe date Date column used plot - can date, year, week. group_by time series end different dates, specify group variable.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/end_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset Data To Label Line Plot — end_points","text":"Data.frame filtered maximum (recent) date including groups date.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/end_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset Data To Label Line Plot — end_points","text":"","code":"df <- data.frame(Date = seq.Date(from = as.Date(\"2023-01-01\"), to = as.Date(\"2023-12-01\"), by = \"month\"), scores = sample(65:99, 12)) end_points(df, Date) #>         Date scores #> 1 2023-12-01     90"},{"path":"https://ericmshearer.github.io/OCepi/reference/geom_dumbbell.html","id":null,"dir":"Reference","previous_headings":"","what":"Dumbbell Plot — geom_dumbbell","title":"Dumbbell Plot — geom_dumbbell","text":"Line plot two points end representing different values.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/geom_dumbbell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dumbbell Plot — geom_dumbbell","text":"","code":"geom_dumbbell(   data = NULL,   mapping = NULL,   show.legend = NA,   inherit.aes = TRUE,   position = \"identity\",   na.rm = FALSE,   colour_x = NULL,   colour_xend = NULL,   size = NULL,   linewidth = NULL,   colour = NULL,   ... )  GeomDumbbell"},{"path":"https://ericmshearer.github.io/OCepi/reference/geom_dumbbell.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dumbbell Plot — geom_dumbbell","text":"object class GeomDumbbell (inherits Geom, ggproto, gg) length 7.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/geom_dumbbell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dumbbell Plot — geom_dumbbell","text":"data Dataframe. mapping Requires following aesthetics: x = starting point, xend = ending point, y = category/factor. show.legend Boolean. inherit.aes TRUE combine default mapping top level plot. position Default set \"identity\". na.rm Boolean remove NA values. colour_x Color starting point. colour_xend Color ending point. size Size points. linewidth Line thickness. colour Line color. ... args, man.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/geom_dumbbell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dumbbell Plot — geom_dumbbell","text":"Dumbbell plot.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/geom_dumbbell.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dumbbell Plot — geom_dumbbell","text":"","code":"library(ggplot2) df <- data.frame(Country = c(\"UK-A\",\"US-A\",\"UK-B\",\"US-B\"), PRE = c(0,1,2,3), POST = c(4,5,6,7)) ggplot(data = df, aes(x = PRE, xend = POST, y = Country)) +  geom_dumbbell(colour_x = \"blue\", colour_xend = \"red\", size = 3, linewidth = 3, colour = \"black\") +  labs(title = \"Dumbbell Plot\", x = \"Pre/Post Scores\", y = \"Country\")"},{"path":"https://ericmshearer.github.io/OCepi/reference/geom_lollipop.html","id":null,"dir":"Reference","previous_headings":"","what":"Lollipop Plot — geom_lollipop","title":"Lollipop Plot — geom_lollipop","text":"Point plot stem. Custom aesthetics via: linetype (stem), linewidth (stem), color (point), size (point).","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/geom_lollipop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lollipop Plot — geom_lollipop","text":"","code":"geom_lollipop(   data = NULL,   mapping = NULL,   show.legend = NA,   inherit.aes = TRUE,   position = \"identity\",   line.colour = NULL,   na.rm = FALSE,   ... )  GeomLollipop"},{"path":"https://ericmshearer.github.io/OCepi/reference/geom_lollipop.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Lollipop Plot — geom_lollipop","text":"object class GeomLollipop (inherits Geom, ggproto, gg) length 7.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/geom_lollipop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lollipop Plot — geom_lollipop","text":"data Dataframe mapping x y mapping. show.legend Boolean. inherit.aes TRUE combine default mapping top level plot. position Default set \"identity\". line.colour Hex code override line color na.rm Boolean remove NA values. ... arguments!","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/geom_lollipop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lollipop Plot — geom_lollipop","text":"Lollipop plot.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/geom_lollipop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lollipop Plot — geom_lollipop","text":"","code":"df <- data.frame(locations = letters[1:5], scores = c(90,82,87,91,74))  ggplot(data = df, aes(x = locations, y = scores, yend = 0)) +  geom_lollipop(size = 10, linewidth = 2, linetype = \"dashed\", color = \"red\")"},{"path":"https://ericmshearer.github.io/OCepi/reference/highlight_geom.html","id":null,"dir":"Reference","previous_headings":"","what":"Highlight Geom Using Expression — highlight_geom","title":"Highlight Geom Using Expression — highlight_geom","text":"Highlight bar, point, line plot based expression.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/highlight_geom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Highlight Geom Using Expression — highlight_geom","text":"","code":"highlight_geom(expr, pal = NULL, size = 3.14, linewidth = 1.2)"},{"path":"https://ericmshearer.github.io/OCepi/reference/highlight_geom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Highlight Geom Using Expression — highlight_geom","text":"expr Expression pal color highlighted geom size Point size using geom_point linewidth Linewidth using geom_line geom_sf","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/highlight_geom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Highlight Geom Using Expression — highlight_geom","text":"ggplot2 highlighted layer","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/highlight_geom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Highlight Geom Using Expression — highlight_geom","text":"","code":"df <- data.frame(locations = letters[1:5], scores = c(80,84,91,89,80)) ggplot(data = df, aes(x = locations, y = scores)) + geom_col() + highlight_geom(scores==max(scores), pal = \"#9E0059\")"},{"path":"https://ericmshearer.github.io/OCepi/reference/hiv_redact.html","id":null,"dir":"Reference","previous_headings":"","what":"Redact HIV/AIDS from Dataframe — hiv_redact","title":"Redact HIV/AIDS from Dataframe — hiv_redact","text":"Remove iterations HIV /AIDS dataframe.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/hiv_redact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Redact HIV/AIDS from Dataframe — hiv_redact","text":"","code":"hiv_redact(df)"},{"path":"https://ericmshearer.github.io/OCepi/reference/hiv_redact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Redact HIV/AIDS from Dataframe — hiv_redact","text":"df Dataframe scan.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/hiv_redact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Redact HIV/AIDS from Dataframe — hiv_redact","text":"Dataframe HIV /AIDS removed.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/hiv_redact.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Redact HIV/AIDS from Dataframe — hiv_redact","text":"","code":"df <- data.frame(cause = c(\"cancer\",\"hepatitis\",\"COVID-19\",\"HIV\")) hiv_redact(df) #> Warning: HIV/AIDS data detected. #>       cause #> 1    cancer #> 2 hepatitis #> 3  COVID-19 #> 4"},{"path":"https://ericmshearer.github.io/OCepi/reference/linelist.html","id":null,"dir":"Reference","previous_headings":"","what":"Outbreak Linelist — linelist","title":"Outbreak Linelist — linelist","text":"Outbreak Linelist","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/linelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outbreak Linelist — linelist","text":"","code":"data(linelist)"},{"path":"https://ericmshearer.github.io/OCepi/reference/linelist.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Outbreak Linelist — linelist","text":"tibble containing PHI.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/linelist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Outbreak Linelist — linelist","text":"","code":"data(linelist)"},{"path":"https://ericmshearer.github.io/OCepi/reference/match_id_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Match ID #1 - Partial Name, DOB, Partial Address — match_id_1","title":"Match ID #1 - Partial Name, DOB, Partial Address — match_id_1","text":"Match ID linking disparate datasets using parts identifiers. aware address formatting consider recoding variable using clean_address.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/match_id_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match ID #1 - Partial Name, DOB, Partial Address — match_id_1","text":"","code":"match_id_1(first_name, last_name, dob, part_address)"},{"path":"https://ericmshearer.github.io/OCepi/reference/match_id_1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match ID #1 - Partial Name, DOB, Partial Address — match_id_1","text":"first_name First 4 characters string last_name First 4 characters string dob Date part_address First 10 characters string","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/match_id_1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match ID #1 - Partial Name, DOB, Partial Address — match_id_1","text":"Match id using part name, date birth, first 10 characters address.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/match_id_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match ID #1 - Partial Name, DOB, Partial Address — match_id_1","text":"","code":"match_id_1(\"Mickey\",\"Mouse\",\"1955-07-17\",\"1313 Disneyland Dr\") #> [1] \"MICKMOUS1955-07-171313 Disne\""},{"path":"https://ericmshearer.github.io/OCepi/reference/match_id_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Match ID #2 - Partial Name, DOB, Full Address — match_id_2","title":"Match ID #2 - Partial Name, DOB, Full Address — match_id_2","text":"Match ID linking disparate datasets using parts identifiers.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/match_id_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match ID #2 - Partial Name, DOB, Full Address — match_id_2","text":"","code":"match_id_2(first_name, last_name, dob, address)"},{"path":"https://ericmshearer.github.io/OCepi/reference/match_id_2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match ID #2 - Partial Name, DOB, Full Address — match_id_2","text":"first_name First 4 characters string last_name First 4 characters string dob Date address Full address","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/match_id_2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match ID #2 - Partial Name, DOB, Full Address — match_id_2","text":"Match id using part name, date birth, full address.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/match_id_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match ID #2 - Partial Name, DOB, Full Address — match_id_2","text":"","code":"match_id_2(\"Mickey\",\"Mouse\",\"1955-07-17\",\"1313 Disneyland Dr\") #> [1] \"MICKMOUS1955-07-171313 Disneyland Dr\""},{"path":"https://ericmshearer.github.io/OCepi/reference/match_id_3.html","id":null,"dir":"Reference","previous_headings":"","what":"Match ID #3 - Partial Name, DOB, Phone Number — match_id_3","title":"Match ID #3 - Partial Name, DOB, Phone Number — match_id_3","text":"Match ID linking disparate datasets using parts identifiers. aware phone number formatting consider recoding variable using clean_phone.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/match_id_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match ID #3 - Partial Name, DOB, Phone Number — match_id_3","text":"","code":"match_id_3(first_name, last_name, dob, phone_number)"},{"path":"https://ericmshearer.github.io/OCepi/reference/match_id_3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match ID #3 - Partial Name, DOB, Phone Number — match_id_3","text":"first_name First 4 characters string last_name First 4 characters string dob Date phone_number String Numeric","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/match_id_3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match ID #3 - Partial Name, DOB, Phone Number — match_id_3","text":"Match id using part name, date birth, phone number.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/match_id_3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match ID #3 - Partial Name, DOB, Phone Number — match_id_3","text":"","code":"match_id_3(\"Mickey\",\"Mouse\",\"1955-07-17\",\"7147814636\") #> [1] \"MICKMOUS1955-07-177147814636\""},{"path":"https://ericmshearer.github.io/OCepi/reference/match_id_4.html","id":null,"dir":"Reference","previous_headings":"","what":"Match ID #4 - Partial Name, DOB — match_id_4","title":"Match ID #4 - Partial Name, DOB — match_id_4","text":"Match ID linking disparate datasets using parts identifiers.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/match_id_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match ID #4 - Partial Name, DOB — match_id_4","text":"","code":"match_id_4(first_name, last_name, dob)"},{"path":"https://ericmshearer.github.io/OCepi/reference/match_id_4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match ID #4 - Partial Name, DOB — match_id_4","text":"first_name First 4 characters string last_name First 4 characters string dob Date","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/match_id_4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match ID #4 - Partial Name, DOB — match_id_4","text":"Match id using part name date birth.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/match_id_4.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match ID #4 - Partial Name, DOB — match_id_4","text":"","code":"match_id_4(\"Mickey\",\"Mouse\",\"1955-07-17\") #> [1] \"MICKMOUS1955-07-17\""},{"path":"https://ericmshearer.github.io/OCepi/reference/mmwr_calendar.html","id":null,"dir":"Reference","previous_headings":"","what":"Create MMWR Calendar — mmwr_calendar","title":"Create MMWR Calendar — mmwr_calendar","text":"Calculate calendar disease weeks plus start end dates.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/mmwr_calendar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create MMWR Calendar — mmwr_calendar","text":"","code":"mmwr_calendar(year)"},{"path":"https://ericmshearer.github.io/OCepi/reference/mmwr_calendar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create MMWR Calendar — mmwr_calendar","text":"year Epidemologic year interest.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/mmwr_calendar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create MMWR Calendar — mmwr_calendar","text":"Dataframe.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/mmwr_calendar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create MMWR Calendar — mmwr_calendar","text":"","code":"mmwr_calendar(2024) #>    Year Week      Start        End #> 1  2024    1 2023-12-31 2024-01-06 #> 2  2024    2 2024-01-07 2024-01-13 #> 3  2024    3 2024-01-14 2024-01-20 #> 4  2024    4 2024-01-21 2024-01-27 #> 5  2024    5 2024-01-28 2024-02-03 #> 6  2024    6 2024-02-04 2024-02-10 #> 7  2024    7 2024-02-11 2024-02-17 #> 8  2024    8 2024-02-18 2024-02-24 #> 9  2024    9 2024-02-25 2024-03-02 #> 10 2024   10 2024-03-03 2024-03-09 #> 11 2024   11 2024-03-10 2024-03-16 #> 12 2024   12 2024-03-17 2024-03-23 #> 13 2024   13 2024-03-24 2024-03-30 #> 14 2024   14 2024-03-31 2024-04-06 #> 15 2024   15 2024-04-07 2024-04-13 #> 16 2024   16 2024-04-14 2024-04-20 #> 17 2024   17 2024-04-21 2024-04-27 #> 18 2024   18 2024-04-28 2024-05-04 #> 19 2024   19 2024-05-05 2024-05-11 #> 20 2024   20 2024-05-12 2024-05-18 #> 21 2024   21 2024-05-19 2024-05-25 #> 22 2024   22 2024-05-26 2024-06-01 #> 23 2024   23 2024-06-02 2024-06-08 #> 24 2024   24 2024-06-09 2024-06-15 #> 25 2024   25 2024-06-16 2024-06-22 #> 26 2024   26 2024-06-23 2024-06-29 #> 27 2024   27 2024-06-30 2024-07-06 #> 28 2024   28 2024-07-07 2024-07-13 #> 29 2024   29 2024-07-14 2024-07-20 #> 30 2024   30 2024-07-21 2024-07-27 #> 31 2024   31 2024-07-28 2024-08-03 #> 32 2024   32 2024-08-04 2024-08-10 #> 33 2024   33 2024-08-11 2024-08-17 #> 34 2024   34 2024-08-18 2024-08-24 #> 35 2024   35 2024-08-25 2024-08-31 #> 36 2024   36 2024-09-01 2024-09-07 #> 37 2024   37 2024-09-08 2024-09-14 #> 38 2024   38 2024-09-15 2024-09-21 #> 39 2024   39 2024-09-22 2024-09-28 #> 40 2024   40 2024-09-29 2024-10-05 #> 41 2024   41 2024-10-06 2024-10-12 #> 42 2024   42 2024-10-13 2024-10-19 #> 43 2024   43 2024-10-20 2024-10-26 #> 44 2024   44 2024-10-27 2024-11-02 #> 45 2024   45 2024-11-03 2024-11-09 #> 46 2024   46 2024-11-10 2024-11-16 #> 47 2024   47 2024-11-17 2024-11-23 #> 48 2024   48 2024-11-24 2024-11-30 #> 49 2024   49 2024-12-01 2024-12-07 #> 50 2024   50 2024-12-08 2024-12-14 #> 51 2024   51 2024-12-15 2024-12-21 #> 52 2024   52 2024-12-22 2024-12-28"},{"path":"https://ericmshearer.github.io/OCepi/reference/mmwr_week.html","id":null,"dir":"Reference","previous_headings":"","what":"Date to MMWR Disease Week — mmwr_week","title":"Date to MMWR Disease Week — mmwr_week","text":"Following CDC MMWR schema, calculate week number based input date.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/mmwr_week.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Date to MMWR Disease Week — mmwr_week","text":"","code":"mmwr_week(date)"},{"path":"https://ericmshearer.github.io/OCepi/reference/mmwr_week.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Date to MMWR Disease Week — mmwr_week","text":"date Input date .e. episode date, specimen collection date.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/mmwr_week.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Date to MMWR Disease Week — mmwr_week","text":"Epidemiological week per MMWR schema.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/mmwr_week.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Date to MMWR Disease Week — mmwr_week","text":"CDC: first day MMWR week Sunday. MMWR week numbering sequential beginning 1 incrementing week maximum 52 53. MMWR week #1 MMWR year first week year least four days calendar year. example, January 1 occurs Sunday, Monday, Tuesday Wednesday, calendar week includes January 1 MMWR week #1. January 1 occurs Thursday, Friday, Saturday, calendar week includes January 1 last MMWR week previous year (#52 #53). rule, December 29, 30, 31 potentially fall MMWR week #1 following MMWR year.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/mmwr_week.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Date to MMWR Disease Week — mmwr_week","text":"","code":"episode_date = as.Date(\"2020-01-14\") mmwr_week(episode_date) #> [1] 3"},{"path":"https://ericmshearer.github.io/OCepi/reference/mmwr_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Date to MMWR Year — mmwr_year","title":"Date to MMWR Year — mmwr_year","text":"Following CDC MMWR schema, calculate year based input date.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/mmwr_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Date to MMWR Year — mmwr_year","text":"","code":"mmwr_year(date)"},{"path":"https://ericmshearer.github.io/OCepi/reference/mmwr_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Date to MMWR Year — mmwr_year","text":"date Input date .e. episode date, specimen collection date.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/mmwr_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Date to MMWR Year — mmwr_year","text":"Epidemiological year per MMWR schema.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/mmwr_year.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Date to MMWR Year — mmwr_year","text":"CDC: first day MMWR week Sunday. MMWR week numbering sequential beginning 1 incrementing week maximum 52 53. MMWR week #1 MMWR year first week year least four days calendar year. example, January 1 occurs Sunday, Monday, Tuesday Wednesday, calendar week includes January 1 MMWR week #1. January 1 occurs Thursday, Friday, Saturday, calendar week includes January 1 last MMWR week previous year (#52 #53). rule, December 29, 30, 31 potentially fall MMWR week #1 following MMWR year.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/mmwr_year.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Date to MMWR Year — mmwr_year","text":"","code":"episode_date = as.Date(\"2020-01-14\") mmwr_year(episode_date) #> [1] 2020"},{"path":"https://ericmshearer.github.io/OCepi/reference/mmwrweek_to_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Disease Week to Week Ending Date — mmwrweek_to_date","title":"Convert Disease Week to Week Ending Date — mmwrweek_to_date","text":"calendar date unknown, convert disease week week ending date.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/mmwrweek_to_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Disease Week to Week Ending Date — mmwrweek_to_date","text":"","code":"mmwrweek_to_date(year, week)"},{"path":"https://ericmshearer.github.io/OCepi/reference/mmwrweek_to_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Disease Week to Week Ending Date — mmwrweek_to_date","text":"year MMWR Year. week MMWR Week.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/mmwrweek_to_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Disease Week to Week Ending Date — mmwrweek_to_date","text":"Week ending date (Saturday).","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/mmwrweek_to_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Disease Week to Week Ending Date — mmwrweek_to_date","text":"","code":"mmwrweek_to_date(2023, 52) #> [1] \"2023-12-30\""},{"path":"https://ericmshearer.github.io/OCepi/reference/n_percent.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Labels for Counts & Proportion — n_percent","title":"Plot Labels for Counts & Proportion — n_percent","text":"Standardized plot labels options ordering.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/n_percent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Labels for Counts & Proportion — n_percent","text":"","code":"n_percent(n, percent, reverse = FALSE, n_suppress = NULL)"},{"path":"https://ericmshearer.github.io/OCepi/reference/n_percent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Labels for Counts & Proportion — n_percent","text":"n Counts variable. percent Proportion variable. reverse Default set false. Order switched percent n FALSE. n_suppress Maximum value suppression. Returns double asterisk.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/n_percent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Labels for Counts & Proportion — n_percent","text":"Plot label character.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/n_percent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Labels for Counts & Proportion — n_percent","text":"","code":"n_percent(5, 25) #> [1] \"5 (25%)\" n_percent(5, 25, reverse = TRUE) #> [1] \"25% (5)\""},{"path":"https://ericmshearer.github.io/OCepi/reference/nssp_date_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust NSSP API Date Range — nssp_date_range","title":"Adjust NSSP API Date Range — nssp_date_range","text":"Customize date range API URL without recreate within ESSENCE.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/nssp_date_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust NSSP API Date Range — nssp_date_range","text":"","code":"nssp_date_range(url, start = NULL, end = NULL)"},{"path":"https://ericmshearer.github.io/OCepi/reference/nssp_date_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust NSSP API Date Range — nssp_date_range","text":"url ESSENCE API URL. start Start date data extraction, date format. end End date data extraction, date format.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/nssp_date_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust NSSP API Date Range — nssp_date_range","text":"String API URL new date range.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/nssp_date_range.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust NSSP API Date Range — nssp_date_range","text":"","code":"if (FALSE) { # \\dontrun{ url <- \"https::///www.syndromic.com/timeSeries?data_source&startDate=14Apr2024&medicalGroupingSystem&endDate=20Jul2024&percentParam\" nssp_date_range(url, start = as.Date(\"2024-01-01\"), end = as.Date(\"2024-06-04\")) } # }"},{"path":"https://ericmshearer.github.io/OCepi/reference/oc_city_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"OC City Basemap — oc_city_sf","title":"OC City Basemap — oc_city_sf","text":"OC City Basemap","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/oc_city_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OC City Basemap — oc_city_sf","text":"","code":"data(oc_city_sf)"},{"path":"https://ericmshearer.github.io/OCepi/reference/oc_city_sf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"OC City Basemap — oc_city_sf","text":"object class sf.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/oc_city_sf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OC City Basemap — oc_city_sf","text":"","code":"data(oc_city_sf)"},{"path":"https://ericmshearer.github.io/OCepi/reference/oc_zip_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"OC Zip Code Basemap — oc_zip_sf","title":"OC Zip Code Basemap — oc_zip_sf","text":"OC Zip Code Basemap","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/oc_zip_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"OC Zip Code Basemap — oc_zip_sf","text":"","code":"data(oc_zip_sf)"},{"path":"https://ericmshearer.github.io/OCepi/reference/oc_zip_sf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"OC Zip Code Basemap — oc_zip_sf","text":"object class sf.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/oc_zip_sf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"OC Zip Code Basemap — oc_zip_sf","text":"","code":"data(oc_zip_sf)"},{"path":"https://ericmshearer.github.io/OCepi/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://ericmshearer.github.io/OCepi/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/pretty_words.html","id":null,"dir":"Reference","previous_headings":"","what":"Messy String to Title Casing — pretty_words","title":"Messy String to Title Casing — pretty_words","text":"Convert string title casing. Useful fixing patient street names.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/pretty_words.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Messy String to Title Casing — pretty_words","text":"","code":"pretty_words(x)"},{"path":"https://ericmshearer.github.io/OCepi/reference/pretty_words.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Messy String to Title Casing — pretty_words","text":"x String variable.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/pretty_words.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Messy String to Title Casing — pretty_words","text":"Input string title casing format.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/pretty_words.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Messy String to Title Casing — pretty_words","text":"","code":"pretty_words(\"MeSsY DaTa GiVeS mE a HeAdAcHe.\") #> [1] \"Messy Data Gives Me a Headache.\""},{"path":"https://ericmshearer.github.io/OCepi/reference/rate_per_100k.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Incidence Rate per 100,000 — rate_per_100k","title":"Calculate Incidence Rate per 100,000 — rate_per_100k","text":"Calculate incidence rate using population denominator.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/rate_per_100k.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Incidence Rate per 100,000 — rate_per_100k","text":"","code":"rate_per_100k(n, pop, digits = 1)"},{"path":"https://ericmshearer.github.io/OCepi/reference/rate_per_100k.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Incidence Rate per 100,000 — rate_per_100k","text":"n Number cases. pop Population denominator. digits Number digits round rate.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/rate_per_100k.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Incidence Rate per 100,000 — rate_per_100k","text":"Crude rate per 100,000.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/rate_per_100k.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Incidence Rate per 100,000 — rate_per_100k","text":"","code":"rate_per_100k(5, 320000, digits = 1) #> [1] 1.6"},{"path":"https://ericmshearer.github.io/OCepi/reference/recode_ctract.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode VRBIS Census Tract — recode_ctract","title":"Recode VRBIS Census Tract — recode_ctract","text":"Remove state county fips code census tract matching/joining.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/recode_ctract.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode VRBIS Census Tract — recode_ctract","text":"","code":"recode_ctract(col)"},{"path":"https://ericmshearer.github.io/OCepi/reference/recode_ctract.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode VRBIS Census Tract — recode_ctract","text":"col Expects \"Residence Census Tract 2010\" variable VRBIS dataset.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/recode_ctract.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode VRBIS Census Tract — recode_ctract","text":"Recoded census tract character.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/recode_ctract.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recode VRBIS Census Tract — recode_ctract","text":"","code":"recode_ctract(\"06059099244\") #> [1] \"099244\" recode_ctract(as.numeric(\"06059099244\")) #> [1] \"099244\""},{"path":"https://ericmshearer.github.io/OCepi/reference/recode_gender.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode Gender/Sex in CalREDIE — recode_gender","title":"Recode Gender/Sex in CalREDIE — recode_gender","text":"Made specifically CaLREDIE UDF data export. Recode abbreviations full names.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/recode_gender.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode Gender/Sex in CalREDIE — recode_gender","text":"","code":"recode_gender(col)"},{"path":"https://ericmshearer.github.io/OCepi/reference/recode_gender.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode Gender/Sex in CalREDIE — recode_gender","text":"col Input column CalREDIE.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/recode_gender.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode Gender/Sex in CalREDIE — recode_gender","text":"Recoded input column character.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/recode_gender.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recode Gender/Sex in CalREDIE — recode_gender","text":"","code":"example = c(\"F\",\"F\",\"TF\",NA) recode_gender(example) #> [1] \"Female\"            \"Female\"            \"Transgender woman\" #> [4] \"Missing/Unknown\""},{"path":"https://ericmshearer.github.io/OCepi/reference/recode_orientation.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode Sexual Orientation in CalREDIE — recode_orientation","title":"Recode Sexual Orientation in CalREDIE — recode_orientation","text":"Made specifically CaLREDIE UDF data export. Recode abbreviations full names.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/recode_orientation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode Sexual Orientation in CalREDIE — recode_orientation","text":"","code":"recode_orientation(col)"},{"path":"https://ericmshearer.github.io/OCepi/reference/recode_orientation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode Sexual Orientation in CalREDIE — recode_orientation","text":"col CTCIAdtlDemOrient column CalREDIE.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/recode_orientation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode Sexual Orientation in CalREDIE — recode_orientation","text":"Recoded column character.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/recode_orientation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recode Sexual Orientation in CalREDIE — recode_orientation","text":"","code":"recode_orientation(\"BIS\") #> [1] \"Bisexual\" recode_orientation(NA) #> [1] \"Missing/Unknown\""},{"path":"https://ericmshearer.github.io/OCepi/reference/recode_race.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode Race/Ethnicity — recode_race","title":"Recode Race/Ethnicity — recode_race","text":"Simplify race/ethnicity patient data one variable using data CalREDIE, CAIR2, VRBIS, LOINC codes. Hierarchy defaults Hispanic/Latinx regardless reported race. Function can handle one (e.g. CAIR2) two inputs (e.g. CalREDIE). using VRBIS dataset, expected input \"Multi-status Race\" column.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/recode_race.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode Race/Ethnicity — recode_race","text":"","code":"recode_race(ethnicity, race, abbr_names = FALSE)"},{"path":"https://ericmshearer.github.io/OCepi/reference/recode_race.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode Race/Ethnicity — recode_race","text":"ethnicity Patient ethnicity variable. race Patient race variable. abbr_names TRUE/FALSE, option abbreviate long category names.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/recode_race.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode Race/Ethnicity — recode_race","text":"Merged race/ethnicity variable.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/recode_race.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recode Race/Ethnicity — recode_race","text":"","code":"recode_race(\"Hispanic\",\"Black or African American\") #> [1] \"Hispanic/Latinx\" recode_race(\"Native Hawaiian or Other Pacific Islander\", abbr_names = FALSE) #> [1] \"Native Hawaiian/Other Pacific Islander\" recode_race(\"1\") #> [1] \"White\""},{"path":"https://ericmshearer.github.io/OCepi/reference/setup_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup R Project — setup_project","title":"Setup R Project — setup_project","text":"Spend less thinking setup R project directories.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/setup_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup R Project — setup_project","text":"","code":"setup_project(read_me = FALSE)"},{"path":"https://ericmshearer.github.io/OCepi/reference/setup_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup R Project — setup_project","text":"read_me Boolean indicate want use built-OCepi Rmd template.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/setup_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setup R Project — setup_project","text":"Three sub-directories READme.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/suppress.html","id":null,"dir":"Reference","previous_headings":"","what":"Data Suppression for Low Category Frequencies — suppress","title":"Data Suppression for Low Category Frequencies — suppress","text":"Mask values/counts specified threshold maintain patient confidentiality.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/suppress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data Suppression for Low Category Frequencies — suppress","text":"","code":"suppress(n, less_than = 5, replace_with = \"**\")"},{"path":"https://ericmshearer.github.io/OCepi/reference/suppress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data Suppression for Low Category Frequencies — suppress","text":"n Input field suppressed. less_than Maximum value suppression. replace_with Value use input field suppressed. String, numeric, NA.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/suppress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Data Suppression for Low Category Frequencies — suppress","text":"Suppressed value.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/suppress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data Suppression for Low Category Frequencies — suppress","text":"","code":"df <- data.frame(Counts = c(5, 1, 10, 3, 12, 9, 4)) df$Counts_Suppressed <- suppress(df$Counts, less_than = 5, replace_with = \"**\") df #>   Counts Counts_Suppressed #> 1      5                 5 #> 2      1                ** #> 3     10                10 #> 4      3                ** #> 5     12                12 #> 6      9                 9 #> 7      4                **"},{"path":"https://ericmshearer.github.io/OCepi/reference/theme_apollo.html","id":null,"dir":"Reference","previous_headings":"","what":"Apollo Theme — theme_apollo","title":"Apollo Theme — theme_apollo","text":"Apollo Theme","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/theme_apollo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apollo Theme — theme_apollo","text":"","code":"theme_apollo(   direction = c(\"vertical\", \"horizontal\", \"map\"),   font = NULL,   legend = c(\"Show\", \"Hide\") )"},{"path":"https://ericmshearer.github.io/OCepi/reference/theme_apollo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apollo Theme — theme_apollo","text":"direction using coord_flip, specify \"horizontal\". Otherwise use \"vertical\". font Option specify font, either system Google fonts. legend Option display legend (\"Show\") hide (\"Hide\").","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/theme_apollo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apollo Theme — theme_apollo","text":"Theme standard ggplots.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/time_between.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Time Between Two Dates — time_between","title":"Calculate Time Between Two Dates — time_between","text":"Calculate elapsed time two dates specified unit time. Order dates within necessarily matter, order dictate sign returned output.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/time_between.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Time Between Two Dates — time_between","text":"","code":"time_between(date2, date1, unit = c(\"days\", \"weeks\", \"months\", \"years\"))"},{"path":"https://ericmshearer.github.io/OCepi/reference/time_between.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Time Between Two Dates — time_between","text":"date2 recent date. date1 Older date date past. unit Specify returned time days, weeks, months, years.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/time_between.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Time Between Two Dates — time_between","text":"Time interval specified units.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/time_between.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Time Between Two Dates — time_between","text":"","code":"date2 = as.POSIXlt(\"2023-02-08 00:10:00 PST\") date1 = as.POSIXlt(\"1986-01-08 22:00:00 PST\")  time_between(date2, date1, unit = \"days\") #> [1] 13544"},{"path":"https://ericmshearer.github.io/OCepi/reference/to_month.html","id":null,"dir":"Reference","previous_headings":"","what":"Date to Month Date — to_month","title":"Date to Month Date — to_month","text":"Recode date standard month date dashboards ggplots2.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/to_month.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Date to Month Date — to_month","text":"","code":"to_month(date)"},{"path":"https://ericmshearer.github.io/OCepi/reference/to_month.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Date to Month Date — to_month","text":"date Input date.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/to_month.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Date to Month Date — to_month","text":"Date YYYY-MM-01 format.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/to_month.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Date to Month Date — to_month","text":"","code":"patient_encounter = as.Date(\"2020-01-14\") to_month(patient_encounter) #> [1] \"2020-01-01\""},{"path":"https://ericmshearer.github.io/OCepi/reference/total_weeks.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Total Disease Weeks for Year — total_weeks","title":"Calculate Total Disease Weeks for Year — total_weeks","text":"Calculate total diseases given MMWR year (52 53 weeks).","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/total_weeks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Total Disease Weeks for Year — total_weeks","text":"","code":"total_weeks(year)"},{"path":"https://ericmshearer.github.io/OCepi/reference/total_weeks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Total Disease Weeks for Year — total_weeks","text":"year Epidemologic year.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/total_weeks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Total Disease Weeks for Year — total_weeks","text":"Number MMWR Disease Weeks.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/total_weeks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Total Disease Weeks for Year — total_weeks","text":"","code":"total_weeks(2024) #> [1] 52"},{"path":"https://ericmshearer.github.io/OCepi/reference/vrbis_manner_death.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode VRBIS Manner of Death — vrbis_manner_death","title":"Recode VRBIS Manner of Death — vrbis_manner_death","text":"Convert single letter full responses per CCDF data dictionary.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/vrbis_manner_death.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode VRBIS Manner of Death — vrbis_manner_death","text":"","code":"vrbis_manner_death(col)"},{"path":"https://ericmshearer.github.io/OCepi/reference/vrbis_manner_death.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode VRBIS Manner of Death — vrbis_manner_death","text":"col Expects \"Manner Death\" column VRBIS dataset.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/vrbis_manner_death.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode VRBIS Manner of Death — vrbis_manner_death","text":"Recoded response character.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/vrbis_manner_death.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recode VRBIS Manner of Death — vrbis_manner_death","text":"","code":"vrbis_manner_death(\"A\") #> [1] \"Accident\" vrbis_manner_death(NA) #> [1] \"Not specified\""},{"path":"https://ericmshearer.github.io/OCepi/reference/vrbis_place_death.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode VRBIS Place of Death — vrbis_place_death","title":"Recode VRBIS Place of Death — vrbis_place_death","text":"Convert number full responses per CCDF data dictionary.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/vrbis_place_death.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode VRBIS Place of Death — vrbis_place_death","text":"","code":"vrbis_place_death(col)"},{"path":"https://ericmshearer.github.io/OCepi/reference/vrbis_place_death.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode VRBIS Place of Death — vrbis_place_death","text":"col Expects \"Place Death (Facility)\" column VRBIS dataset.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/vrbis_place_death.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode VRBIS Place of Death — vrbis_place_death","text":"Recoded response character.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/vrbis_place_death.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recode VRBIS Place of Death — vrbis_place_death","text":"","code":"vrbis_place_death(6) #> [1] \"LTCF\" vrbis_place_death(\"6\") #> [1] \"LTCF\""},{"path":"https://ericmshearer.github.io/OCepi/reference/vrbis_resident.html","id":null,"dir":"Reference","previous_headings":"","what":"Algorithm for Death Certificate Inclusion — vrbis_resident","title":"Algorithm for Death Certificate Inclusion — vrbis_resident","text":"Standardized method determine death belongs local health jurisdiction.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/vrbis_resident.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Algorithm for Death Certificate Inclusion — vrbis_resident","text":"","code":"vrbis_resident(   death_location,   county_of_death,   county_fips,   fips = \"059\",   county_code = \"30\" )"},{"path":"https://ericmshearer.github.io/OCepi/reference/vrbis_resident.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Algorithm for Death Certificate Inclusion — vrbis_resident","text":"death_location Expects \"Place Death (Facility)\" column VRBIS dataset. county_of_death Expects \"County Death (Code)\" column. county_fips Expects \"Decedents County Residence (NCHS Code)\" column. fips County fips code local health jurisdiction. county_code State county code per Appendix G CCDF data dictionary.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/vrbis_resident.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Algorithm for Death Certificate Inclusion — vrbis_resident","text":"0/1, 1 indicating death belongs local health jurisdiction.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/week_ending_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Week Ending Date — week_ending_date","title":"Week Ending Date — week_ending_date","text":"Calculate week ending date following CDC MMWR schema.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/week_ending_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Week Ending Date — week_ending_date","text":"","code":"week_ending_date(date)"},{"path":"https://ericmshearer.github.io/OCepi/reference/week_ending_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Week Ending Date — week_ending_date","text":"date Input date.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/week_ending_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Week Ending Date — week_ending_date","text":"Output date.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/week_ending_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Week Ending Date — week_ending_date","text":"","code":"episode_date = as.Date(\"2020-01-14\") week_ending_date(episode_date) #> [1] \"2020-01-18\""},{"path":"https://ericmshearer.github.io/OCepi/reference/wrap_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap Long Axis Labels — wrap_labels","title":"Wrap Long Axis Labels — wrap_labels","text":"Shorten total width x-axis labels breaking/wrapping text forward slash \"\".","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/wrap_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap Long Axis Labels — wrap_labels","text":"","code":"wrap_labels()"},{"path":"https://ericmshearer.github.io/OCepi/reference/wrap_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrap Long Axis Labels — wrap_labels","text":"Wrapped labels.","code":""},{"path":"https://ericmshearer.github.io/OCepi/reference/wrap_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrap Long Axis Labels — wrap_labels","text":"","code":"df <- data.frame(group = c(\"Native Hawaiian or Other Pacific Islander\", \"Black or African American\",\"American Indian or Alaska Native\"), score = c(89.5, 84, 73))  ggplot(data = df, aes(x = group, y = score)) +  geom_col() +  scale_x_discrete(labels = wrap_labels())"},{"path":[]},{"path":"https://ericmshearer.github.io/OCepi/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"OCepi 0.2.0","text":"Added suppression option OCepi::n_percent(n, percent, reverse = FALSE, n_suppress = NULL). Added map orientation OCepi::theme_apollo(direction = \"map\"). Shapefiles OCepi::oc_zip_sf OCepi::oc_city_sf now available spatial analysis. Building terms/codes OCepi::pos() OCepi::neg() recoding electronic laboratory results.","code":""},{"path":"https://ericmshearer.github.io/OCepi/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"OCepi 0.2.0","text":"Fixed bug OCepi::add_percent() small proportions less one recoded “<1%”. Aligned majority OCepi::highlight_geom() OCepi::desaturate_geom() share core structure deviate fading desaturating. Enhanced OCepi::wrap_labels() wrap text forward slash. label contains “”, replaced forward slash wrapped.","code":""},{"path":[]},{"path":"https://ericmshearer.github.io/OCepi/news/index.html","id":"ocepi-010-2023-09-15","dir":"Changelog","previous_headings":"","what":"OCepi 0.1.0 (2023-09-15)","title":"OCepi 0.1.0 (2023-09-15)","text":"Initial release!","code":""}]
